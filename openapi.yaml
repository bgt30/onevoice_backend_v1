openapi: 3.0.3
info:
  title: OneVoice Backend API
  description: AI-powered video dubbing service backend API
  version: 1.0.0
  contact:
    name: OneVoice Team
    email: support@onevoice.com
  license:
    name: MIT

servers:
  - url: https://api.onevoice.com
    description: Production server
  - url: https://staging-api.onevoice.com
    description: Staging server
  - url: http://localhost:8000
    description: Development server

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        username:
          type: string
        full_name:
          type: string
        avatar_url:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8

    SignupRequest:
      type: object
      required:
        - email
        - password
        - username
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8
        username:
          type: string
        full_name:
          type: string

    AuthResponse:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string
          example: bearer
        expires_in:
          type: integer
        user:
          $ref: '#/components/schemas/User'

    Video:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        duration:
          type: number
        original_language:
          type: string
        target_languages:
          type: array
          items:
            type: string
        status:
          type: string
          enum: [uploaded, processing, completed, failed]
        thumbnail_url:
          type: string
          format: uri
        video_url:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    DubRequest:
      type: object
      required:
        - target_language
        - voice_id
      properties:
        target_language:
          type: string
        voice_id:
          type: string
        preserve_background_music:
          type: boolean
          default: true

    JobStatus:
      type: object
      properties:
        job_id:
          type: string
        status:
          type: string
          enum: [pending, processing, completed, failed, cancelled]
        progress:
          type: number
          minimum: 0
          maximum: 100
        estimated_completion:
          type: string
          format: date-time
        error_message:
          type: string

    BillingPlan:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        price:
          type: number
        currency:
          type: string
        billing_period:
          type: string
          enum: [monthly, yearly]
        credits_included:
          type: integer
        features:
          type: array
          items:
            type: string

    Subscription:
      type: object
      properties:
        id:
          type: string
        plan_id:
          type: string
        status:
          type: string
          enum: [active, cancelled, past_due, unpaid]
        current_period_start:
          type: string
          format: date-time
        current_period_end:
          type: string
          format: date-time
        cancel_at_period_end:
          type: boolean

    Language:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        native_name:
          type: string

    Voice:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        language:
          type: string
        gender:
          type: string
          enum: [male, female, neutral]
        style:
          type: string
        preview_url:
          type: string
          format: uri

    Error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        details:
          type: object

paths:
  # Authentication endpoints
  /api/auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/auth/signup:
    post:
      tags:
        - Authentication
      summary: User registration
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/auth/forgot-password:
    post:
      tags:
        - Authentication
      summary: Request password reset
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Password reset email sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/auth/reset-password:
    post:
      tags:
        - Authentication
      summary: Reset password with token
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
                - new_password
              properties:
                token:
                  type: string
                new_password:
                  type: string
                  minLength: 8
      responses:
        '200':
          description: Password reset successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/auth/logout:
    post:
      tags:
        - Authentication
      summary: User logout
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  # User Management endpoints
  /api/users/profile:
    get:
      tags:
        - User Management
      summary: Get user profile
      responses:
        '200':
          description: User profile retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
        - User Management
      summary: Update user profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                full_name:
                  type: string
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /api/users/password:
    put:
      tags:
        - User Management
      summary: Change user password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - current_password
                - new_password
              properties:
                current_password:
                  type: string
                new_password:
                  type: string
                  minLength: 8
      responses:
        '200':
          description: Password changed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/users/avatar:
    post:
      tags:
        - User Management
      summary: Upload user avatar
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
      responses:
        '200':
          description: Avatar uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  avatar_url:
                    type: string
                    format: uri
    delete:
      tags:
        - User Management
      summary: Delete user avatar
      responses:
        '200':
          description: Avatar deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/users/subscription:
    get:
      tags:
        - User Management
      summary: Get user subscription details
      responses:
        '200':
          description: Subscription details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'

  /api/users/credits/usage:
    get:
      tags:
        - User Management
      summary: Get user credits usage
      responses:
        '200':
          description: Credits usage retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_credits:
                    type: integer
                  used_credits:
                    type: integer
                  remaining_credits:
                    type: integer
                  current_period_start:
                    type: string
                    format: date-time
                  current_period_end:
                    type: string
                    format: date-time

  /api/users/dashboard/stats:
    get:
      tags:
        - User Management
      summary: Get dashboard statistics
      responses:
        '200':
          description: Dashboard stats retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_videos:
                    type: integer
                  completed_videos:
                    type: integer
                  processing_videos:
                    type: integer
                  total_duration:
                    type: number
                  credits_used_this_month:
                    type: integer

  /api/users/notifications/preferences:
    get:
      tags:
        - User Management
      summary: Get notification preferences
      responses:
        '200':
          description: Notification preferences retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  email_notifications:
                    type: boolean
                  processing_complete:
                    type: boolean
                  billing_updates:
                    type: boolean
                  marketing_emails:
                    type: boolean
    put:
      tags:
        - User Management
      summary: Update notification preferences
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_notifications:
                  type: boolean
                processing_complete:
                  type: boolean
                billing_updates:
                  type: boolean
                marketing_emails:
                  type: boolean
      responses:
        '200':
          description: Preferences updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/users/activity:
    get:
      tags:
        - User Management
      summary: Get user activity log
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Activity log retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  activities:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        action:
                          type: string
                        description:
                          type: string
                        timestamp:
                          type: string
                          format: date-time
                  pagination:
                    type: object

  /api/users/delete-account:
    post:
      tags:
        - User Management
      summary: Delete user account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - password
              properties:
                password:
                  type: string
      responses:
        '200':
          description: Account deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  # Billing & Subscriptions endpoints
  /api/billing/plans:
    get:
      tags:
        - Billing & Subscriptions
      summary: Get available billing plans
      responses:
        '200':
          description: Billing plans retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillingPlan'

  /api/billing/subscription:
    get:
      tags:
        - Billing & Subscriptions
      summary: Get current subscription
      responses:
        '200':
          description: Current subscription retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
    put:
      tags:
        - Billing & Subscriptions
      summary: Update subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - plan_id
              properties:
                plan_id:
                  type: string
      responses:
        '200':
          description: Subscription updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'

  /api/billing/subscribe:
    post:
      tags:
        - Billing & Subscriptions
      summary: Create new subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - plan_id
                - payment_method_id
              properties:
                plan_id:
                  type: string
                payment_method_id:
                  type: string
      responses:
        '201':
          description: Subscription created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'

  /api/billing/subscription/cancel:
    post:
      tags:
        - Billing & Subscriptions
      summary: Cancel subscription
      responses:
        '200':
          description: Subscription cancelled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/billing/subscription/resume:
    post:
      tags:
        - Billing & Subscriptions
      summary: Resume cancelled subscription
      responses:
        '200':
          description: Subscription resumed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'

  /api/billing/history:
    get:
      tags:
        - Billing & Subscriptions
      summary: Get billing history
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: perPage
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Billing history retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoices:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        amount:
                          type: number
                        currency:
                          type: string
                        status:
                          type: string
                        created_at:
                          type: string
                          format: date-time
                  pagination:
                    type: object

  /api/billing/upcoming-invoice:
    get:
      tags:
        - Billing & Subscriptions
      summary: Get upcoming invoice
      responses:
        '200':
          description: Upcoming invoice retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  amount:
                    type: number
                  currency:
                    type: string
                  period_start:
                    type: string
                    format: date-time
                  period_end:
                    type: string
                    format: date-time

  /api/billing/payment-method:
    put:
      tags:
        - Billing & Subscriptions
      summary: Update default payment method
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - payment_method_id
              properties:
                payment_method_id:
                  type: string
      responses:
        '200':
          description: Payment method updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/billing/payment-methods:
    get:
      tags:
        - Billing & Subscriptions
      summary: Get all payment methods
      responses:
        '200':
          description: Payment methods retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
                    last4:
                      type: string
                    brand:
                      type: string
                    is_default:
                      type: boolean

  /api/billing/payment-methods/{id}:
    delete:
      tags:
        - Billing & Subscriptions
      summary: Delete payment method
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Payment method deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/billing/setup-intent:
    post:
      tags:
        - Billing & Subscriptions
      summary: Create setup intent for payment method
      responses:
        '200':
          description: Setup intent created
          content:
            application/json:
              schema:
                type: object
                properties:
                  client_secret:
                    type: string

  /api/billing/usage:
    get:
      tags:
        - Billing & Subscriptions
      summary: Get billing usage details
      responses:
        '200':
          description: Usage details retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  current_period_usage:
                    type: integer
                  included_credits:
                    type: integer
                  overage_credits:
                    type: integer
                  overage_cost:
                    type: number

  # Video Management endpoints
  /api/videos:
    get:
      tags:
        - Video Management
      summary: Get user videos
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            default: 20
        - name: status
          in: query
          schema:
            type: string
            enum: [uploaded, processing, completed, failed]
      responses:
        '200':
          description: Videos retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  videos:
                    type: array
                    items:
                      $ref: '#/components/schemas/Video'
                  pagination:
                    type: object
    post:
      tags:
        - Video Management
      summary: Create new video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
              properties:
                title:
                  type: string
                description:
                  type: string
                original_language:
                  type: string
      responses:
        '201':
          description: Video created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'

  /api/videos/{id}:
    get:
      tags:
        - Video Management
      summary: Get video by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Video retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
    put:
      tags:
        - Video Management
      summary: Update video
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
      responses:
        '200':
          description: Video updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
    delete:
      tags:
        - Video Management
      summary: Delete video
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Video deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/videos/upload-url:
    post:
      tags:
        - Video Management
      summary: Get pre-signed upload URL
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - filename
                - content_type
              properties:
                filename:
                  type: string
                content_type:
                  type: string
      responses:
        '200':
          description: Upload URL generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  upload_url:
                    type: string
                    format: uri
                  video_id:
                    type: string
                    format: uuid

  /api/videos/upload:
    post:
      tags:
        - Video Management
      summary: Upload video file
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                title:
                  type: string
                description:
                  type: string
      responses:
        '201':
          description: Video uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'

  /api/videos/{id}/dub:
    post:
      tags:
        - Video Management
      summary: Start video dubbing process
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DubRequest'
      responses:
        '202':
          description: Dubbing process started
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_id:
                    type: string
                  message:
                    type: string

  /api/videos/{id}/status:
    get:
      tags:
        - Video Management
      summary: Get video processing status
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Processing status retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatus'

  /api/videos/{id}/cancel:
    post:
      tags:
        - Video Management
      summary: Cancel video processing
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Processing cancelled
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /api/videos/{id}/download:
    get:
      tags:
        - Video Management
      summary: Download processed video
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: language
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Download URL generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  download_url:
                    type: string
                    format: uri
                  expires_at:
                    type: string
                    format: date-time

  /api/videos/{id}/duplicate:
    post:
      tags:
        - Video Management
      summary: Duplicate video
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '201':
          description: Video duplicated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'

  /api/videos/{id}/thumbnail:
    post:
      tags:
        - Video Management
      summary: Generate or update video thumbnail
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                thumbnail:
                  type: string
                  format: binary
                timestamp:
                  type: number
                  description: Time in seconds to extract thumbnail from video
      responses:
        '200':
          description: Thumbnail generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  thumbnail_url:
                    type: string
                    format: uri

  /api/videos/languages:
    get:
      tags:
        - Video Management
      summary: Get supported languages
      responses:
        '200':
          description: Supported languages retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Language'

  /api/videos/voices:
    get:
      tags:
        - Video Management
      summary: Get available voices for language
      parameters:
        - name: language
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Available voices retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Voice'


tags:
  - name: Authentication
    description: User authentication and authorization
  - name: User Management
    description: User profile and account management
  - name: Billing & Subscriptions
    description: Payment processing and subscription management
  - name: Video Management
    description: Video upload, processing, and dubbing operations 